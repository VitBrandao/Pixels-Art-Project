{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-11T15:09:15.682Z",
    "end": "2021-09-11T15:10:35.987Z",
    "duration": 80305,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ced7945c-99ba-4af8-8432-dfdab81b41e5",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3c22ad08-5ccc-4f46-91a4-4b2810451752",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "f468ec0d-1ac9-4cc8-8a41-929c26b07e8b",
              "parentUUID": "3c22ad08-5ccc-4f46-91a4-4b2810451752",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f468ec0d-1ac9-4cc8-8a41-929c26b07e8b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 155,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3762033d-ac12-4228-b260-fa5598a2a2b5",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "234fe12c-6a9a-47ca-802e-1ef0da8db49e",
              "parentUUID": "3762033d-ac12-4228-b260-fa5598a2a2b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "3d8f4060-9a8a-4343-a5f2-c2adbdca6429",
              "parentUUID": "3762033d-ac12-4228-b260-fa5598a2a2b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "87fd3f40-cfe4-4a97-bb77-7a51e6c59f42",
              "parentUUID": "3762033d-ac12-4228-b260-fa5598a2a2b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "b081fd9b-097f-41f2-8465-fdd422c18d2d",
              "parentUUID": "3762033d-ac12-4228-b260-fa5598a2a2b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "03288bfb-8660-4b69-9ea9-93d1b94411a4",
              "parentUUID": "3762033d-ac12-4228-b260-fa5598a2a2b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "bf09c2e8-5ad7-4104-95bd-c89f98b52691",
              "parentUUID": "3762033d-ac12-4228-b260-fa5598a2a2b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "73723156-f4a4-4ab0-bd2c-7810056bc439",
              "parentUUID": "3762033d-ac12-4228-b260-fa5598a2a2b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "234fe12c-6a9a-47ca-802e-1ef0da8db49e",
            "3d8f4060-9a8a-4343-a5f2-c2adbdca6429",
            "87fd3f40-cfe4-4a97-bb77-7a51e6c59f42",
            "b081fd9b-097f-41f2-8465-fdd422c18d2d",
            "03288bfb-8660-4b69-9ea9-93d1b94411a4",
            "bf09c2e8-5ad7-4104-95bd-c89f98b52691",
            "73723156-f4a4-4ab0-bd2c-7810056bc439"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 802,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fc14b33b-fd8f-4f5e-bbf9-110e2b8a920b",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "cec9def9-e7fe-45bb-9566-8b7f65c05a2d",
              "parentUUID": "fc14b33b-fd8f-4f5e-bbf9-110e2b8a920b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "643046fb-1ace-42ad-bba1-5cb014d1f61a",
              "parentUUID": "fc14b33b-fd8f-4f5e-bbf9-110e2b8a920b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cec9def9-e7fe-45bb-9566-8b7f65c05a2d",
            "643046fb-1ace-42ad-bba1-5cb014d1f61a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d18c01b1-965a-472f-82bc-2ebcbc4d7bb1",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "b4041fcb-2189-492d-82ad-bb1082e7bd7c",
              "parentUUID": "d18c01b1-965a-472f-82bc-2ebcbc4d7bb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "bb3ca8bb-4641-46e4-b8e2-0d0a0ddce9a0",
              "parentUUID": "d18c01b1-965a-472f-82bc-2ebcbc4d7bb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c75cba5d-c5ed-4772-bf7f-4e379c3b966b",
              "parentUUID": "d18c01b1-965a-472f-82bc-2ebcbc4d7bb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "bc2a763f-dad6-4041-bcf7-d3313fb2c2c0",
              "parentUUID": "d18c01b1-965a-472f-82bc-2ebcbc4d7bb1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4041fcb-2189-492d-82ad-bb1082e7bd7c",
            "bb3ca8bb-4641-46e4-b8e2-0d0a0ddce9a0",
            "c75cba5d-c5ed-4772-bf7f-4e379c3b966b",
            "bc2a763f-dad6-4041-bcf7-d3313fb2c2c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 430,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c0a4cec8-4a88-43da-aef0-bbcb3abbe1e2",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "bb1a16a5-4645-428c-bb3e-e52ff0fd38ff",
              "parentUUID": "c0a4cec8-4a88-43da-aef0-bbcb3abbe1e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "47f72f97-7cd2-4270-8866-2b8b17a99eb5",
              "parentUUID": "c0a4cec8-4a88-43da-aef0-bbcb3abbe1e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb1a16a5-4645-428c-bb3e-e52ff0fd38ff",
            "47f72f97-7cd2-4270-8866-2b8b17a99eb5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 497,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "206b42a5-a023-4614-8395-b5069e0641f9",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "a9137278-9f73-41f7-a13d-229cefcb9439",
              "parentUUID": "206b42a5-a023-4614-8395-b5069e0641f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "61ad0dc9-958c-425a-b34d-5bee8319c876",
              "parentUUID": "206b42a5-a023-4614-8395-b5069e0641f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9137278-9f73-41f7-a13d-229cefcb9439",
            "61ad0dc9-958c-425a-b34d-5bee8319c876"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 146,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1f007c6c-9ffe-442e-82a0-f9465d64338c",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "09808e45-aaad-45c5-8c0d-cea77670f271",
              "parentUUID": "1f007c6c-9ffe-442e-82a0-f9465d64338c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "3178949d-f2b1-4e1f-8c95-d95a433ed92a",
              "parentUUID": "1f007c6c-9ffe-442e-82a0-f9465d64338c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09808e45-aaad-45c5-8c0d-cea77670f271",
            "3178949d-f2b1-4e1f-8c95-d95a433ed92a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9673,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b70893da-a74a-494f-93ae-dae769c1d7c7",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "db636c5c-f5b4-4a4c-812a-e36c1590834b",
              "parentUUID": "b70893da-a74a-494f-93ae-dae769c1d7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "d7f660ae-ce02-480b-9bf3-ce1ea5b511e3",
              "parentUUID": "b70893da-a74a-494f-93ae-dae769c1d7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "7236753d-12cb-43ae-a120-2608b06cfc09",
              "parentUUID": "b70893da-a74a-494f-93ae-dae769c1d7c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db636c5c-f5b4-4a4c-812a-e36c1590834b",
            "d7f660ae-ce02-480b-9bf3-ce1ea5b511e3",
            "7236753d-12cb-43ae-a120-2608b06cfc09"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12885,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2ed34a57-ad7a-44c4-be2b-8ab7028369d5",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "e229c02e-e6ac-40a9-b39e-6f8a1e1280e2",
              "parentUUID": "2ed34a57-ad7a-44c4-be2b-8ab7028369d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "af685673-801e-4d12-af42-6f868d3dc06a",
              "parentUUID": "2ed34a57-ad7a-44c4-be2b-8ab7028369d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "336a20d3-a609-4e45-9a26-c916a37970d9",
              "parentUUID": "2ed34a57-ad7a-44c4-be2b-8ab7028369d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2491,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "eb0aba0f-89e9-4248-9453-306ea213bbe1",
              "parentUUID": "2ed34a57-ad7a-44c4-be2b-8ab7028369d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e229c02e-e6ac-40a9-b39e-6f8a1e1280e2",
            "af685673-801e-4d12-af42-6f868d3dc06a",
            "336a20d3-a609-4e45-9a26-c916a37970d9",
            "eb0aba0f-89e9-4248-9453-306ea213bbe1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2758,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e927fe94-5f0a-4b93-a2a4-cafa436dbe85",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4267,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d4084ee6-74f8-4091-bce5-9efb7091e2b0",
              "parentUUID": "e927fe94-5f0a-4b93-a2a4-cafa436dbe85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4293,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c3e54f21-cc74-41a5-88b1-dfc6900773a6",
              "parentUUID": "e927fe94-5f0a-4b93-a2a4-cafa436dbe85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4328,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "901d89df-fdd4-4074-a067-a6255c56947d",
              "parentUUID": "e927fe94-5f0a-4b93-a2a4-cafa436dbe85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4245,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "aee52192-5ca2-4aeb-baa8-166b65a11b4a",
              "parentUUID": "e927fe94-5f0a-4b93-a2a4-cafa436dbe85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4241,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5bcd755e-492e-419b-a51c-797491a18726",
              "parentUUID": "e927fe94-5f0a-4b93-a2a4-cafa436dbe85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4234,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7735f6a6-7fcb-49df-a968-9d9330c62ec7",
              "parentUUID": "e927fe94-5f0a-4b93-a2a4-cafa436dbe85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4246,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8328a07e-df88-44f1-99e7-ddc495a33d42",
              "parentUUID": "e927fe94-5f0a-4b93-a2a4-cafa436dbe85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4293,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "16fa190e-0edb-410b-b5e6-c036f0a75b8d",
              "parentUUID": "e927fe94-5f0a-4b93-a2a4-cafa436dbe85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4282,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "04f32185-ed3f-4471-a6ed-660584b65b60",
              "parentUUID": "e927fe94-5f0a-4b93-a2a4-cafa436dbe85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d4084ee6-74f8-4091-bce5-9efb7091e2b0",
            "c3e54f21-cc74-41a5-88b1-dfc6900773a6",
            "901d89df-fdd4-4074-a067-a6255c56947d",
            "aee52192-5ca2-4aeb-baa8-166b65a11b4a",
            "5bcd755e-492e-419b-a51c-797491a18726",
            "7735f6a6-7fcb-49df-a968-9d9330c62ec7",
            "8328a07e-df88-44f1-99e7-ddc495a33d42",
            "16fa190e-0edb-410b-b5e6-c036f0a75b8d",
            "04f32185-ed3f-4471-a6ed-660584b65b60"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38429,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e1746a36-d5d3-4d0b-96bd-08c9bfaca5df",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4235,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "22ce386c-9f32-4391-a3a7-8d73f9b13ba1",
              "parentUUID": "e1746a36-d5d3-4d0b-96bd-08c9bfaca5df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4252,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0e02f95e-7ff9-4463-a77e-49142925ca66",
              "parentUUID": "e1746a36-d5d3-4d0b-96bd-08c9bfaca5df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4285,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46373/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46373/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46373/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46373/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46373/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46373/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46373/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c7b992fc-5051-4c98-90d6-728e6e76d9e1",
              "parentUUID": "e1746a36-d5d3-4d0b-96bd-08c9bfaca5df",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "22ce386c-9f32-4391-a3a7-8d73f9b13ba1",
            "0e02f95e-7ff9-4463-a77e-49142925ca66",
            "c7b992fc-5051-4c98-90d6-728e6e76d9e1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12772,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f3c179c3-1de7-4be6-9f5c-a6971feb62b5",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 316,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:46373/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:46373/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:46373/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:46373/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:46373/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:46373/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:46373/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46373/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "802b797f-1ec9-4925-9cfc-84df83a21374",
              "parentUUID": "f3c179c3-1de7-4be6-9f5c-a6971feb62b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 325,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:46373/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:46373/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:46373/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:46373/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:46373/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:46373/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:46373/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46373/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46373/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:46373/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46373/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46373/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "dd116588-4dee-4da3-894b-94b6b819d486",
              "parentUUID": "f3c179c3-1de7-4be6-9f5c-a6971feb62b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "802b797f-1ec9-4925-9cfc-84df83a21374",
            "dd116588-4dee-4da3-894b-94b6b819d486"
          ],
          "pending": [],
          "skipped": [],
          "duration": 641,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}